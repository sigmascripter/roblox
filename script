local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local outlineColor = Color3.new(1, 0, 0) -- Change to your desired outline color

local function createOutline(target)
    local outline = Instance.new("Highlight")
    outline.FillColor = outlineColor
    outline.OutlineColor = outlineColor
    outline.OutlineTransparency = 0.5 -- Adjust transparency as needed
    outline.Parent = target
end

game.Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function(character)
        createOutline(character)
        
        character:WaitForChild("Humanoid").Died:Connect(function()
            if character:FindFirstChild("Highlight") then
                character.Highlight:Destroy()
            end
        end)
    end)
end)

-- Create outline for existing players
for _, existingPlayer in pairs(game.Players:GetPlayers()) do
    if existingPlayer ~= player and existingPlayer.Character then
        createOutline(existingPlayer.Character)
    end
end

-- Update outlines continuously
game:GetService("RunService").RenderStepped:Connect(function()
    for _, existingPlayer in pairs(game.Players:GetPlayers()) do
        if existingPlayer ~= player and existingPlayer.Character and existingPlayer.Character:FindFirstChild("Highlight") then
            local character = existingPlayer.Character
            if character.HumanoidRootPart then
                local position, onScreen = camera:WorldToScreenPoint(character.HumanoidRootPart.Position)
                if not onScreen then
                    character.Highlight.Enabled = true
                else
                    character.Highlight.Enabled = false
                end
            end
        end
    end
end)









local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local outlineColor = Color3.new(1, 0, 0) -- Change to your desired outline color

local function createOutline(target)
    local outline = Instance.new("Highlight")
    outline.FillColor = outlineColor
    outline.OutlineColor = outlineColor
    outline.OutlineTransparency = 0.5 -- Adjust transparency as needed
    outline.Parent = target
end

game.Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function(character)
        createOutline(character)
        
        character:WaitForChild("Humanoid").Died:Connect(function()
            if character:FindFirstChild("Highlight") then
                character.Highlight:Destroy()
            end
        end)
    end)
end)

-- Create outline for existing players
for _, existingPlayer in pairs(game.Players:GetPlayers()) do
    if existingPlayer ~= player and existingPlayer.Character then
        createOutline(existingPlayer.Character)
    end
end

-- Update outlines continuously
game:GetService("RunService").RenderStepped:Connect(function()
    for _, existingPlayer in pairs(game.Players:GetPlayers()) do
        if existingPlayer ~= player and existingPlayer.Character and existingPlayer.Character:FindFirstChild("Highlight") then
            local character = existingPlayer.Character
            if character.HumanoidRootPart then
                local position, onScreen = camera:WorldToScreenPoint(character.HumanoidRootPart.Position)
                if not onScreen then
                    character.Highlight.Enabled = true
                else
                    character.Highlight.Enabled = false
                end
            end
        end
    end
end)


local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local outlineColor = Color3.new(1, 0, 0) -- Change to your desired outline color

local function createOutline(target)
    local outline = Instance.new("Highlight")
    outline.FillColor = outlineColor
    outline.OutlineColor = outlineColor
    outline.OutlineTransparency = 0.5 -- Adjust transparency as needed
    outline.Parent = target
end

game.Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function(character)
        createOutline(character)
        
        character:WaitForChild("Humanoid").Died:Connect(function()
            if character:FindFirstChild("Highlight") then
                character.Highlight:Destroy()
            end
        end)
    end)
end)

-- Create outline for existing players
for _, existingPlayer in pairs(game.Players:GetPlayers()) do
    if existingPlayer ~= player and existingPlayer.Character then
        createOutline(existingPlayer.Character)
    end
end

-- Update outlines continuously
game:GetService("RunService").RenderStepped:Connect(function()
    for _, existingPlayer in pairs(game.Players:GetPlayers()) do
        if existingPlayer ~= player and existingPlayer.Character and existingPlayer.Character:FindFirstChild("Highlight") then
            local character = existingPlayer.Character
            if character.HumanoidRootPart then
                local position, onScreen = camera:WorldToScreenPoint(character.HumanoidRootPart.Position)
                if not onScreen then
                    character.Highlight.Enabled = true
                else
                    character.Highlight.Enabled = false
                end
            end
        end
    end
end)
